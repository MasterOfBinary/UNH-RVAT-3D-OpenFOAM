#!/bin/sh
cd ${0%/*} || exit 1    # run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Get the number of processors to run on from system/decomposeParDict
nProc=$(getNumberOfProcessors)

# Make dummy 0 directory
mkdir 0

# - meshing
runApplication blockMesh
runApplication surfaceFeatureExtract

runApplication decomposePar

runParallel snappyHexMesh $nProc -overwrite

runParallel renumberMesh $nProc -overwrite

# force removal of fields generated by snappy
\rm -rf 0

# - generate face/cell sets and zones

runParallel topoSet $nProc -dict system/removeRedundantZones.topoSetDict
mv log.topoSet log.removeRedundantZones.topoSet

runParallel topoSet $nProc -dict system/createInletOutletSets.topoSetDict
mv log.topoSet log.createInletOutletSets.topoSet

runParallel topoSet $nProc -dict system/createAMIFaces.topoSetDict
mv log.topoSet log.createAMIFaces.topoSet

# - create the inlet/outlet patches
runParallel createPatch $nProc -overwrite

#- For non-parallel running
#cp -r 0.org 0 > /dev/null 2>&1

#- For parallel running
ls -d processor* | xargs -i rm -rf ./{}/0 $1
ls -d processor* | xargs -i cp -r 0.org ./{}/0 $1

# - apply the initial fields
cp -rf 0.org 0

# - create the AMI faces by creating baffles, and then splitting the mesh

runParallel createBaffles $nProc -overwrite
runParallel mergeOrSplitBaffles $nProc -split -overwrite

runParallel checkMesh $nProc
runParallel yPlus $nProc

notify-send "OpenFOAM" "Meshing finished."

# - test by running moveDynamicMesh
runParallel moveDynamicMesh $nProc -checkAMI
